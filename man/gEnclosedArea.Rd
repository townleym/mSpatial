% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mSpatial.R
\name{gEnclosedArea}
\alias{gEnclosedArea}
\title{Return polygons enclosed by a container --based on a percent area enclosed (deprecated)}
\usage{
gEnclosedArea(container, reference, threshold = 0.99)
}
\arguments{
\item{container}{The single polygon that will enclose the set of reference polygons}

\item{reference}{The set of polygons that will be selected down to the containing polygon based on areal overlap}

\item{threshold}{The percent of areal overlap required for inclusion}
}
\description{
We want to return the reference polygons whose areal overlap with the container falls within some threshold
}
\details{
This function uses name matching / extraction. It's a kludge and often fails. use \code{gPolyByIntersect} instead. Preserved for existing code that uses it.

\strong{Note}: all inputs should be of class \code{sp::SpatialPolygons|Points}.

Areal calculations really only work if the input polygons are rendered in the same planar projection.
}
\examples{
require(sp)
# Use the US National Atlas Lambert Equal Area projection
drivetime.proj = spTransform(drivetime, CRSobj = CRS(EPSG[EPSG$code == 2163 & !is.na(EPSG$code), "prj4"]))
blockgroups.proj = spTransform(block_groups, CRSobj = CRS(EPSG[EPSG$code == 2163 & !is.na(EPSG$code), "prj4"]))
# Return only the blockgroups whose overlap exceeds 20\%
gEnclosedArea(drivetime.proj, block_groups.proj, threshold = 0.2)

# Often it will be faster to work with a subset of reference polygons 
reference.bg.proj = gBoundingPoly(drivetime.proj, blockgroups.proj, tolerance = 1.25)
gEnclosedArea(drivetime.proj, reference.bg.proj, threshold = 0.2)
}
\keyword{spatial}

